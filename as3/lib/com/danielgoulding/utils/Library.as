package com.danielgoulding.utils {	import flash.display.Bitmap;	import flash.display.BitmapData;	import flash.display.MovieClip;	import flash.display.SimpleButton;	import flash.media.Sound;	import flash.system.ApplicationDomain;	import flash.utils.getDefinitionByName;			/**	 * @author Dan	 */	public class Library {				public static const MOVIECLIP			: String = "movieClip";		public static const BITMAP				: String = "bitmap";		public static const BUTTON				: String = "button";		public static const SOUND				: String = "sound";		public static const VIDEO				: String = "video";				/**		 * Return library asset:		 */		public static function GetAsset(name:String, type:String, domain:ApplicationDomain = null):*{			switch(type){				case BITMAP:					return GetBitmap(name, domain);					break;				case MOVIECLIP:					return GetMovieClip(name, domain);					break;				case BUTTON:					return GetButton(name, domain);					break;				case SOUND:					return GetSound(name, domain);					break;			}			return null;		}				public static function GetBitmap(name:String, domain:ApplicationDomain = null):Bitmap{			var BMDClass:Class = domain ? domain.getDefinition(name) as Class : getDefinitionByName(name) as Class;			var bitmapData:BitmapData = new BMDClass(0,0) as BitmapData;			return new Bitmap(bitmapData);		}				public static function GetMovieClip(name:String, domain:ApplicationDomain = null):MovieClip{			var TypeClass:Class = domain ? domain.getDefinition(name) as Class : getDefinitionByName(name) as Class;			return new TypeClass() as MovieClip;		}				public static function GetButton(name:String, domain:ApplicationDomain = null):SimpleButton{			var TypeClass:Class = domain ? domain.getDefinition(name) as Class : getDefinitionByName(name) as Class;			return new TypeClass() as SimpleButton;		}				public static function GetSound(name:String, domain:ApplicationDomain = null):Sound{			var TypeClass:Class = domain ? domain.getDefinition(name) as Class : getDefinitionByName(name) as Class;			return new TypeClass as Sound;		}			}}